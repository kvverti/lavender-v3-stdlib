##! The prelude contains commonly used and essential functions conveniently
##! imported automatically into every Lavender program compiled with the
##! standard library.

##! Aliases for common types.

export type sys::intrinsic::Flt
export type sys::intrinsic::Int
export type sys::intrinsic::Str
export type sys::intrinsic::(->)
export data sys::data::tuple::(,)
export data sys::data::option::Option

##! Common functions.

## Identity function.
def id: 'a -> 'a
  ; a => a

## Constant function.
def const: 'a -> (for b. b -> 'a)
  ; a _ => a

## Function application.
def ($)': ('a -> 'b) -> 'a -> 'b
  ; f a => f a

## Strict function application.
export def sys::intrinsic::strictAp as ($!)'

## Function post-application.
def '(@): 'a -> ('a -> 'b) -> 'b
  ; => flip ($)

## Function composition.
def '(.)': ('b -> 'c) -> ('a -> 'b) -> ('a -> 'c)
  ; f g a => f (g a)

## Binary operator transposition.
def flip: ('a -> 'b -> 'c) -> ('b -> 'a -> 'c)
  ; f a b => f b a

## Curry tuple-accepting function.
def curry: (('a, 'b) -> 'c) -> ('a -> 'b -> 'c)
  ; f a b => f (a, b)

## Uncurry curried function.
def uncurry: ('a -> 'b -> 'c) -> (('a, 'b) -> 'c)
  ; f (a, b) => f a b
